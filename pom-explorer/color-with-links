/*
Those are callbacks which are called for each node and relation,
so you can filter and customize them
*/
({

// confirm that you want a node
// return false to eliminate the node
confirmNode: function(gav) {
  //var g = gavString.split(':');
  //gav = {groupId:g[0], artifactId:g[1], version:g[2]};
  // if(gav.indexOf("fr.lteconsulting")!=0) return false;
  //if(gav.indexOf("undertow")<0) return false;
  return true;
},

// confirm that you want the relation
// return false to eliminate the relation
confirmRelation: function(link) {
  if(link.relation.type=="BUILD_DEPENDENCY") return false;
  // if(link.relation.type!="DEPENDENCY") return false;
  if(link.relation.type=="PARENT") return false;
  if(link.relation.scope=="TEST") return false;
  // if(link.to.indexOf('undertow')==-1) return false;
  return true;
},

// customize the node appearance
// return a structure with the size and the color of the node
node: function(node) {

function rgbToHex(R,G,B) {return toHex(R)+toHex(G)+toHex(B)}
function toHex(n) {
 n = parseInt(n,10);
 if (isNaN(n)) return "00";
 n = Math.max(0,Math.min(n,255));
 return "0123456789ABCDEF".charAt((n-n%16)/16)
      + "0123456789ABCDEF".charAt(n%16);
}

  var size = 21 + node.links.length * 0;
  
  var max = 25;
  var offset = 0.5;
  var coef = Math.min(node.links.length,max)/max;
  coef = offset + ((1-offset)*coef);
  coef = coef * 255;
  var color = rgbToHex(coef, coef, coef);

  if(node.data.groupId=="fr.lteconsulting")
    color = 0xff2211;
  if(node.data.artifactId.indexOf('undertow')>=0)
    color = 0x22ff11;

  return { size:size, color:color };
},

// customize the link color
// return a structure with the 'from' and 'to' colors
linkColor: function(relation) {
if(relation.relation.type=="PARENT")
return { fromColor:0x000000, toColor:0xbb0000};
  return { fromColor:0x000000, toColor:0xbbbbbb};
}
})
  	